/* eslint-disable no-useless-constructor */import React, {Component} from "react"import {connect} from "react-redux"import { withRouter } from 'react-router'import Utils from "./../../utils"// import SidebarItem from "./SidebarItem"import { Menu } from 'antd';import path from "path"const SubMenu = Menu.SubMenu;class Sidebar extends Component {    constructor (props) {    	super(props)	    this.state = {    		keys: []	    }	    this.hasOneShowingChild = this.hasOneShowingChild.bind(this);	    this.linkTo = this.linkTo.bind(this);	    this.resolvePath = this.resolvePath.bind(this);    }    componentWillMount(){    	const {location} = this.props;        let paths =  Utils.getPathArrByPath(location.pathname)	    let keys = Utils.getOpenKeysByPaths(paths)	    this.setState({		    keys: keys	    })    }	hasOneShowingChild(){		let children = this.props.item.children || [];		const showingChildren = children.filter(item => {			return !item.hidden		})		return showingChildren.length === 0	}	linkTo() {		console.log(this.props.basePath)	}	resolvePath(routePath){		return path.resolve(this.props.basePath, routePath)	}    render() {    	const {routes, sidebarOpened, theme, location} = this.props;        return (	        <div className={"sidebar-scroll"} style={{backgroundColor: theme.sideBack}}>		        <Menu			        defaultSelectedKeys={[location.pathname]}			        defaultOpenKeys={this.state.keys}			        mode={'inline' /*'vertical'*/}			        theme={'dark'}			        style={{backgroundColor: theme.sideBack}}			        inlineCollapsed={!sidebarOpened}			        className={!sidebarOpened && 'collapsed'}			        // className={}		        >			        {			        	routes.map( (route) =>					        (!route.hidden &&						        (<span></span>))				        )			        }		        </Menu>	        </div>        )    }}const sidebarConnect = connect(	(state) => ({		routes: state.permission.routes,		sidebarOpened: state.app.sidebarOpened,		theme: state.app.theme	}))export default withRouter(sidebarConnect(Sidebar))